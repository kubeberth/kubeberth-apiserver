---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubeberth-apiserver
rules:
- apiGroups:
  - berth.kubeberth.io
  resources:
  - archives
  - cloudinits
  - disks
  - servers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeberth-apiserver
  namespace: kubeberth-system

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubeberth-apiserver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeberth-apiserver
subjects:
- kind: ServiceAccount
  name: kubeberth-apiserver
  namespace: kubeberth-system

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeberth-apiserver
  namespace: kubeberth-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kubeberth-apiserver
  template:
    metadata:
      labels:
        app: kubeberth-apiserver
    spec:
      serviceAccountName: kubeberth-apiserver
      securityContext:
        runAsNonRoot: true
      containers:
      - name: kubeberth-apiserver
        image: kubeberth/kubeberth-apiserver:v1alpha1
        imagePullPolicy: Always
        ports:
        - containerPort: 2022
          protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: kubeberth-apiserver
  namespace: kubeberth-system
  annotations:
    external-dns.alpha.kubernetes.io/hostname: api.kubeberth.k8s.arpa
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
  - name: kubeberth-apiserver
    protocol: TCP
    port: 80
    targetPort: 2022
  selector:
    app: kubeberth-apiserver

---
